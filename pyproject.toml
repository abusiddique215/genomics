[tool.poetry]
name = "genomics-treatment-system"
version = "1.0.0"
description = "AI-Enhanced Genomics Treatment Recommendation System"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
fastapi = "^0.104.1"
uvicorn = "^0.24.0"
pydantic = "^2.5.2"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.0.0"
PyYAML = "^6.0.1"
boto3 = "^1.29.3"
sqlalchemy = "^1.4.42"  # Changed to match databases requirement
databases = {extras = ["postgresql"], version = "^0.8.0"}
asyncpg = "^0.29.0"
tensorflow = "^2.14.0"
scikit-learn = "^1.3.2"
pandas = "^2.1.3"
numpy = "^1.26.2"
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
psutil = "^5.9.6"
structlog = "^23.2.0"
aiohttp = "^3.9.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.1"
pytest-mock = "^3.12.0"
pytest-env = "^1.0.1"
httpx = "^0.25.1"
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
isort = "^5.12.0"
pre-commit = "^3.5.0"
bandit = "^1.7.5"
safety = "^2.3.5"
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"
mkdocstrings = "^0.23.0"
moto = "^4.2.10"
freezegun = "^1.2.2"
responses = "^0.24.1"
factory-boy = "^3.3.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running tests",
]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.coverage.run]
source = ["services"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
