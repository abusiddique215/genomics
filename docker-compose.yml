version: '3.8'

services:
  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb"
    networks:
      - genomics-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  patient-management:
    build:
      context: .
      dockerfile: services/patient_management/Dockerfile
    container_name: patient-management
    ports:
      - "8080:8080"
    environment:
      - DYNAMODB_ENDPOINT=http://dynamodb:8000
      - TREATMENT_PREDICTION_URL=http://treatment-prediction:8083
    depends_on:
      dynamodb:
        condition: service_healthy
    networks:
      - genomics-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  treatment-prediction:
    build:
      context: .
      dockerfile: services/treatment_prediction/Dockerfile
    container_name: treatment-prediction
    ports:
      - "8083:8083"
    environment:
      - MODEL_PATH=/app/models
    volumes:
      - ./models:/app/models
    networks:
      - genomics-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  data-ingestion:
    build:
      context: .
      dockerfile: services/data_ingestion/Dockerfile
    container_name: data-ingestion
    ports:
      - "8084:8084"
    environment:
      - PATIENT_API_URL=http://patient-management:8080
    depends_on:
      - patient-management
    networks:
      - genomics-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  genomics-net:
    name: genomics-network
    driver: bridge
